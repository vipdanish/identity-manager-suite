
version: '3.8'

services:
  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "127.0.0.1:27017:27017"  # Only expose to localhost
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_DATABASE: userdb
      # Add authentication in production
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
    command: ["--auth", "--bind_ip_all"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - mongo
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongo:27017/userdb?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      PORT: 5000
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Service (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local
